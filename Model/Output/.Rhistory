knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(readxl)
library(lubridate)
library(magrittr)
ncf_source <- "../Source/SourceFiles/NCREIF/NPI Returns 3-9-21.xlsx"
map_dfr(c("NPI - National", "NPI - Property Type"),
function(x) {
read_xlsx(path = ncf_source, sheet = x)
}) %>%
transmute(
Date = yq(str_c(Year, "0", Quarter)) %m+% months(3) %m+% days(-1),
PropertyType = factor(replace_na(PropertyType, "All"), levels = c("All", "A", "H", "I", "O", "R")),
y = `Income Return`,
g = `Capital Return`,
r = `Total Return`
) -> ncf_dataset
ncf_source <- "../Source/SourceFiles/NCREIF/NPI Returns 3-9-21.xlsx"
map_dfr(c("NPI - National", "NPI - Property Type"),
function(x) {
read_xlsx(path = ncf_source, sheet = x)
}) %>%
transmute(
Date = yq(str_c(Year, "0", Quarter)) %m+% months(3) %m+% days(-1),
PropertyType = factor(replace_na(PropertyType, "All"), levels = c("All", "A", "H", "I", "O", "R")),
y = `Income Return`,
g = `Capital Return`,
r = `Total Return`
) -> ncf_dataset
glimpse(ncf_dataset)
NCF_DATASET
ncf_dataset
filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))
filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r
forecast::ggtsdisplay(filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r, lag.max=30)
forecast::ggtsdisplay(filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r,
lag.max = 30) +
theme_bw()
forecast::ggtsdisplay(filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r,
lag.max = 30)
?forecast::ggtsdisplay
returns <- filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r
ts(returns)
ts(returns, start = as.Date(1978-03-31), frequency = "Quarterly")
ts(returns, start = as.Date(1978-03-31), frequency = "4")
ts(returns, start = as.Date(1978-03-31), frequency = 4)
ts(returns, start = as.Date("1978-03-31"), frequency = 4)
?ts
forecast::ggtsdisplay(returns, lag.max = 30)
forecast::ggtsdisplay(returns, lag.max = 30) -> prueba
View(prueba)
?forecast::ggtsdisplay
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme =theme_bw())
returns <- ts(
filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r,
start = as.Date("1978-03-31"),
frequency = 4
)
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme =theme_bw())
returns <- ts(
filter(ncf_dataset, PropertyType == "All", Date <= as.Date("2020-03-31"))$r,
start = 1978,
frequency = 4
)
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme = theme_bw())
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme = theme_bw())
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme = theme_bw(),
ylab = "NPI Quarterly Total Returns", xlab = "Year")
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme = theme_bw(),
ylab = "NPI Quarterly Total Returns", xlab = "Year")
forecast::ggtsdisplay(returns, lag.max = 30, plot.type = "scatter", theme = theme_bw(),
ylab = "NPI Total Returns", xlab = "Year")
forecast::ggtsdisplay(
returns,
lag.max = 30,
plot.type = "scatter",
theme = theme_bw(),
scale_x_continuous(labels = percent),
ylab = "NPI Total Returns",
xlab = "Year"
)
forecast::ggtsdisplay(
returns,
lag.max = 30,
plot.type = "scatter",
theme = theme_bw(),
ylab = "NPI Total Returns",
xlab = "Year"
)
ncf_datasetp %>%
ggplot(mapping = aes(x = Return, fill = Index, color = Index)) +
geom_density(alpha = 0.5) +
facet_wrap(~PropertyType, ncol = 2) +
scale_x_continuous(labels = percent) +
theme_bw()
ncf_datasetp <- ncf_dataset %>%
pivot_longer(cols = c("y", "g", "r"), names_to = "Index", values_to = "Return") %>%
mutate(Index = factor(Index, levels = c("y", "g", "r")))
ncf_datasetp %>%
ggplot(mapping = aes(x = Index, y = Return)) +
geom_boxplot() +
facet_wrap(~PropertyType, nrow = 1) +
scale_y_continuous(labels = percent) +
theme_bw()
ncf_datasetp %>%
ggplot(mapping = aes(x = Return, fill = Index, color = Index)) +
geom_density(alpha = 0.5) +
facet_wrap(~PropertyType, ncol = 2) +
scale_x_continuous(labels = percent) +
theme_bw()
ncf_dataset %>%
filter(PropertyType == "All") %>%
select(r, g, y) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
# scale_y_continuous(labels = percent) +
theme_bw()
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na()
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, vjust = 0.5))
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5),
strip.background = element_blank(),
strip.placement = "outside",
legend.text=element_text(size=9)
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5),
strip.background = element_blank(),
strip.placement = "outside",
legend.text=element_text(size = 5)
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 5),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 1),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 0.9),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 0.8),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 0.75),
strip.background = element_blank(),
strip.placement = "outside"
)
ncf_dataset %>%
select(Date, PropertyType, g) %>%
pivot_wider(names_from = PropertyType, values_from = g) %>%
select(-c("Date")) %>%
drop_na() %>%
`colnames<-`(c("Nation", "Apartments", "Industrial", "Office", "Retail", "Hospitality")) %>%
GGally::ggpairs() +
scale_x_continuous(labels = percent) +
theme_bw() +
theme(
axis.text.x=element_text(angle = 90, vjust = 0.5, size = 0.75),
strip.background = element_blank(),
strip.placement = "outside"
)
